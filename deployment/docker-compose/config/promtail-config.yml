server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/promtail/positions/positions.yml # Path inside Promtail container where it stores read positions

clients:
  - url: http://loki:3100/loki/api/v1/push # Address of the Loki service (using Docker service name)

scrape_configs:
  - job_name: docker_services
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        # Optional: Filter which containers Promtail scrapes.
        # Useful if you only want logs from containers with a specific label.
        # filters:
        #   - name: label
        #     values: ["logging=promtail"] # Example: only scrape containers with label "logging=promtail"
    relabel_configs:
      # Add the 'compose_service' label from Docker Compose service name. This is very useful.
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'

      # Add the 'container_name' label, stripping the leading slash if present.
      - source_labels: ['__meta_docker_container_name']
        regex: '/?(.*)' # Strips leading slash if any
        target_label: 'container_name'

      # Keep the original log stream (stdout/stderr) as a label.
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'

      # Keep the container ID as a label.
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'

      # Example: If you add a custom Docker label like "app.component=mycomponent" to your app services:
      # - source_labels: ['__meta_docker_container_label_app_component']
      #   target_label: 'component'

      # Example: Set a default 'job' label for all logs from this scrape config
      # - target_label: job
      #   replacement: docker_daemon_logs

    # Optional: Pipeline stages for processing logs before sending to Loki
    # (e.g., parsing JSON and extracting more labels, but use with caution for high cardinality labels)
    # pipeline_stages:
    #   - json:
    #       expressions:
    #         level: level # Extracts "level" field from JSON log to a "level" label
    #   - labels:
    #       level: # Makes the extracted field a Loki label

  # You can add other scrape_configs here, for example, to read from static file paths:
  # - job_name: system_var_log
  #   static_configs:
  #   - targets:
  #       - localhost
  #     labels:
  #       job: varlogs
  #       __path__: /var/log/*log # Requires mounting /var/log from host into Promtail
  # - job_name: my_app_custom_log_file
  #   static_configs:
  #   - targets:
  #       - localhost
  #     labels:
  #       job: my_app_file
  #       __path__: /path/to/your/application/logfile.log # Mount this specific log file path
